{"version":3,"sources":["../../server/helpers/transactions.js"],"names":["createCashAmountTransactionWith","createStockOrderTransactionWith","User","transactionCreator","req","res","newTransaction","body","updateAndRespondWithUpdate","asyncTransactionCreator","quantity","equitySymbol","err","status","end","message","updatedUser","addTransactionToSingletonUser","JSON","stringify","transactions"],"mappings":";;;;;QAIgBA,+B,GAAAA,+B;QAOAC,+B,GAAAA,+B;;AAVhB;;IAAYC,I;;AACZ;;;;;;AAEO,SAASF,+BAAT,CAA0CG,kBAA1C,EAA8E;AACnF,SAAO,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACzB,UAAMC,iBAAiBH,mBAAmBC,IAAIG,IAAvB,CAAvB;AACAC,+BAA2BF,cAA3B,EAA2CD,GAA3C;AACD,GAHD;AAID;;AAEM,SAASJ,+BAAT,CACLQ,uBADK,EAEL;AACA;AAAA,iCAAO,WAAgBL,GAAhB,EAAqBC,GAArB,EAA0B;AAC/B,YAAM,EAACK,QAAD,EAAWC,YAAX,KAA2BP,IAAIG,IAArC;AACA,UAAI;AACF,cAAMD,iBAAiB,MAAMG,wBAAwBC,QAAxB,+BAAkDC,YAAlD,CAA7B;AACAH,oCAA2B,MAAMF,cAAjC,GAAiDD,GAAjD;AACD,OAHD,CAGE,OAAOO,GAAP,EAAY;AACZP,YAAIQ,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,CAAoBF,IAAIG,OAAxB;AACD;AACF,KARD;;AAAA;AAAA;AAAA;AAAA;AASD;;AAED,SAASP,0BAAT,CAAqCF,cAArC,EAAqDD,GAArD,EAA0D;AACxD,QAAMW,cAAcd,KAAKe,6BAAL,CAAmCX,cAAnC,CAApB;AACAD,MAAIQ,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,CAAoBI,KAAKC,SAAL,CAAeH,YAAYI,YAA3B,CAApB;AACD","file":"transactions.js","sourcesContent":["// @flow\nimport * as User from '../models/users'\nimport {fetchLivePrice} from '../../lib/stockOrders'\n\nexport function createCashAmountTransactionWith (transactionCreator: mixed => mixed) {\n  return function (req, res) {\n    const newTransaction = transactionCreator(req.body)\n    updateAndRespondWithUpdate(newTransaction, res)\n  }\n}\n\nexport function createStockOrderTransactionWith (\n  asyncTransactionCreator: (number, string => Promise<*>, string) => Promise<*>\n) {\n  return async function (req, res) {\n    const {quantity, equitySymbol} = req.body\n    try {\n      const newTransaction = await asyncTransactionCreator(quantity, fetchLivePrice, equitySymbol)\n      updateAndRespondWithUpdate(await newTransaction, res)\n    } catch (err) {\n      res.status(500).end(err.message)\n    }\n  }\n}\n\nfunction updateAndRespondWithUpdate (newTransaction, res) {\n  const updatedUser = User.addTransactionToSingletonUser(newTransaction)\n  res.status(201).end(JSON.stringify(updatedUser.transactions))\n}\n"]}