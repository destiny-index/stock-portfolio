{"version":3,"sources":["../../server/models/users.js"],"names":["getSingletonUser","replaceSingletonUser","addTransactionToSingletonUser","user","updatedUser","transaction","transactions"],"mappings":";;;;;;;;QASgBA,gB,GAAAA,gB;QAIAC,oB,GAAAA,oB;QAKAC,6B,GAAAA,6B;;AAjBhB;;AAIA;;AAEA,IAAIC,OAAO,sBAAX;;AAEO,SAASH,gBAAT,GAA6B;AAClC,SAAOG,IAAP;AACD;;AAEM,SAASF,oBAAT,CAA+BG,WAA/B,EAAkD;AACvDD,SAAOC,WAAP;AACA,SAAOD,IAAP;AACD;;AAEM,SAASD,6BAAT,CAAwCG,WAAxC,EAAkE;AACvEF,sBACKA,IADL;AAEEG,kBAAc,CAAC,GAAGH,KAAKG,YAAT,EAAuBD,WAAvB;AAFhB;AAIA,SAAOF,IAAP;AACD","file":"users.js","sourcesContent":["// @flow\nimport {makeUser} from '../../lib/users'\nimport type {User} from '../../lib/users'\nimport type {Transaction} from '../../lib/transactions'\n\n/* The app is for personal use so only create a singleton user.\n * We create the user in memory because a DB is not required. */\nlet user = makeUser()\n\nexport function getSingletonUser () {\n  return user\n}\n\nexport function replaceSingletonUser (updatedUser: User) {\n  user = updatedUser\n  return user\n}\n\nexport function addTransactionToSingletonUser (transaction: Transaction) {\n  user = {\n    ...user,\n    transactions: [...user.transactions, transaction]\n  }\n  return user\n}\n"]}